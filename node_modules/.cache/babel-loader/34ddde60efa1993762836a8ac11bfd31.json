{"ast":null,"code":"import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nimport { matchCSSObject } from \"./types\";\nexport const {\n  createCssAndCx\n} = (() => {\n  function merge(registered, css, className) {\n    const registeredStyles = [];\n    const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles);\n  }\n\n  function createCssAndCx(params) {\n    const {\n      cache\n    } = params;\n\n    const css = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      const serialized = serializeStyles(args, cache.registered);\n      insertStyles(cache, serialized, false);\n      const className = `${cache.key}-${serialized.name}`;\n\n      scope: {\n        const arg = args[0];\n\n        if (!matchCSSObject(arg)) {\n          break scope;\n        }\n\n        increaseSpecificityToTakePrecedenceOverMediaQueries.saveClassNameCSSObjectMapping(cache, className, arg);\n      }\n\n      return className;\n    };\n\n    const cx = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      const className = classnames(args);\n      const feat27FixedClassnames = increaseSpecificityToTakePrecedenceOverMediaQueries.fixClassName(cache, className, css);\n      return merge(cache.registered, css, feat27FixedClassnames); //return merge(cache.registered, css, className);\n    };\n\n    return {\n      css,\n      cx\n    };\n  }\n\n  return {\n    createCssAndCx\n  };\n})();\nexport function createUseCssAndCx(params) {\n  const {\n    useCache\n  } = params;\n\n  function useCssAndCx() {\n    const cache = useCache();\n    const {\n      css,\n      cx\n    } = useGuaranteedMemo(() => createCssAndCx({\n      cache\n    }), [cache]);\n    return {\n      css,\n      cx\n    };\n  }\n\n  return {\n    useCssAndCx\n  };\n} // https://github.com/garronej/tss-react/issues/27\n\nconst increaseSpecificityToTakePrecedenceOverMediaQueries = (() => {\n  const cssObjectMapByCache = new WeakMap();\n  return {\n    \"saveClassNameCSSObjectMapping\": (cache, className, cssObject) => {\n      let cssObjectMap = cssObjectMapByCache.get(cache);\n\n      if (cssObjectMap === undefined) {\n        cssObjectMap = new Map();\n        cssObjectMapByCache.set(cache, cssObjectMap);\n      }\n\n      cssObjectMap.set(className, cssObject);\n    },\n    \"fixClassName\": (() => {\n      function fix(classNameCSSObjects) {\n        let isThereAnyMediaQueriesInPreviousClasses = false;\n        return classNameCSSObjects.map(_ref => {\n          let [className, cssObject] = _ref;\n\n          if (cssObject === undefined) {\n            return className;\n          }\n\n          let out;\n\n          if (!isThereAnyMediaQueriesInPreviousClasses) {\n            out = className;\n\n            for (const key in cssObject) {\n              if (key.startsWith(\"@media\")) {\n                isThereAnyMediaQueriesInPreviousClasses = true;\n                break;\n              }\n            }\n          } else {\n            out = {\n              \"&&\": cssObject\n            };\n          }\n\n          return out;\n        });\n      }\n\n      return (cache, className, css) => {\n        const cssObjectMap = cssObjectMapByCache.get(cache);\n        return classnames(fix(className.split(\" \").map(className => [className, cssObjectMap === null || cssObjectMap === void 0 ? void 0 : cssObjectMap.get(className)])).map(classNameOrCSSObject => typeof classNameOrCSSObject === \"string\" ? classNameOrCSSObject : css(classNameOrCSSObject)));\n      };\n    })()\n  };\n})();","map":{"version":3,"names":["classnames","serializeStyles","insertStyles","getRegisteredStyles","useGuaranteedMemo","matchCSSObject","createCssAndCx","merge","registered","css","className","registeredStyles","rawClassName","length","params","cache","args","serialized","key","name","scope","arg","increaseSpecificityToTakePrecedenceOverMediaQueries","saveClassNameCSSObjectMapping","cx","feat27FixedClassnames","fixClassName","createUseCssAndCx","useCache","useCssAndCx","cssObjectMapByCache","WeakMap","cssObject","cssObjectMap","get","undefined","Map","set","fix","classNameCSSObjects","isThereAnyMediaQueriesInPreviousClasses","map","out","startsWith","split","classNameOrCSSObject"],"sources":["C:/Users/Polic/Downloads/ReactFakeShop-main/node_modules/tss-react/esm/cssAndCx.js"],"sourcesContent":["import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nimport { matchCSSObject } from \"./types\";\nexport const { createCssAndCx } = (() => {\n    function merge(registered, css, className) {\n        const registeredStyles = [];\n        const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n        if (registeredStyles.length < 2) {\n            return className;\n        }\n        return rawClassName + css(registeredStyles);\n    }\n    function createCssAndCx(params) {\n        const { cache } = params;\n        const css = (...args) => {\n            const serialized = serializeStyles(args, cache.registered);\n            insertStyles(cache, serialized, false);\n            const className = `${cache.key}-${serialized.name}`;\n            scope: {\n                const arg = args[0];\n                if (!matchCSSObject(arg)) {\n                    break scope;\n                }\n                increaseSpecificityToTakePrecedenceOverMediaQueries.saveClassNameCSSObjectMapping(cache, className, arg);\n            }\n            return className;\n        };\n        const cx = (...args) => {\n            const className = classnames(args);\n            const feat27FixedClassnames = increaseSpecificityToTakePrecedenceOverMediaQueries.fixClassName(cache, className, css);\n            return merge(cache.registered, css, feat27FixedClassnames);\n            //return merge(cache.registered, css, className);\n        };\n        return { css, cx };\n    }\n    return { createCssAndCx };\n})();\nexport function createUseCssAndCx(params) {\n    const { useCache } = params;\n    function useCssAndCx() {\n        const cache = useCache();\n        const { css, cx } = useGuaranteedMemo(() => createCssAndCx({ cache }), [cache]);\n        return { css, cx };\n    }\n    return { useCssAndCx };\n}\n// https://github.com/garronej/tss-react/issues/27\nconst increaseSpecificityToTakePrecedenceOverMediaQueries = (() => {\n    const cssObjectMapByCache = new WeakMap();\n    return {\n        \"saveClassNameCSSObjectMapping\": (cache, className, cssObject) => {\n            let cssObjectMap = cssObjectMapByCache.get(cache);\n            if (cssObjectMap === undefined) {\n                cssObjectMap = new Map();\n                cssObjectMapByCache.set(cache, cssObjectMap);\n            }\n            cssObjectMap.set(className, cssObject);\n        },\n        \"fixClassName\": (() => {\n            function fix(classNameCSSObjects) {\n                let isThereAnyMediaQueriesInPreviousClasses = false;\n                return classNameCSSObjects.map(([className, cssObject]) => {\n                    if (cssObject === undefined) {\n                        return className;\n                    }\n                    let out;\n                    if (!isThereAnyMediaQueriesInPreviousClasses) {\n                        out = className;\n                        for (const key in cssObject) {\n                            if (key.startsWith(\"@media\")) {\n                                isThereAnyMediaQueriesInPreviousClasses = true;\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        out = {\n                            \"&&\": cssObject,\n                        };\n                    }\n                    return out;\n                });\n            }\n            return (cache, className, css) => {\n                const cssObjectMap = cssObjectMapByCache.get(cache);\n                return classnames(fix(className\n                    .split(\" \")\n                    .map(className => [\n                    className,\n                    cssObjectMap === null || cssObjectMap === void 0 ? void 0 : cssObjectMap.get(className),\n                ])).map(classNameOrCSSObject => typeof classNameOrCSSObject === \"string\"\n                    ? classNameOrCSSObject\n                    : css(classNameOrCSSObject)));\n            };\n        })(),\n    };\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}