{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesFromProps, cx) {\n  //NOTE: We use this test to be resilient in case classesFromProps is not of the expected type.\n  if (!(classesFromProps instanceof Object)) {\n    return classesFromUseStyles;\n  }\n\n  const out = {};\n  objectKeys(classesFromUseStyles).forEach(ruleName => out[ruleName] = cx(classesFromUseStyles[ruleName], classesFromProps[ruleName]));\n  objectKeys(classesFromProps).forEach(ruleName => {\n    if (ruleName in classesFromUseStyles) {\n      return;\n    }\n\n    const className = classesFromProps[ruleName]; //...Same here, that why we don't do className === undefined\n\n    if (typeof className !== \"string\") {\n      return;\n    }\n\n    out[ruleName] = className;\n  });\n  return out;\n}","map":{"version":3,"names":["objectKeys","mergeClasses","classesFromUseStyles","classesFromProps","cx","Object","out","forEach","ruleName","className"],"sources":["C:/Users/Polic/Downloads/ReactFakeShop-main/node_modules/tss-react/esm/mergeClasses.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesFromProps, cx) {\n    //NOTE: We use this test to be resilient in case classesFromProps is not of the expected type.\n    if (!(classesFromProps instanceof Object)) {\n        return classesFromUseStyles;\n    }\n    const out = {};\n    objectKeys(classesFromUseStyles).forEach(ruleName => (out[ruleName] = cx(classesFromUseStyles[ruleName], classesFromProps[ruleName])));\n    objectKeys(classesFromProps).forEach(ruleName => {\n        if (ruleName in classesFromUseStyles) {\n            return;\n        }\n        const className = classesFromProps[ruleName];\n        //...Same here, that why we don't do className === undefined\n        if (typeof className !== \"string\") {\n            return;\n        }\n        out[ruleName] = className;\n    });\n    return out;\n}\n"],"mappings":"AAAA;;AACA;AACA,SAASA,UAAT,QAA2B,oBAA3B;AACA,OAAO,SAASC,YAAT,CAAsBC,oBAAtB,EAA4CC,gBAA5C,EAA8DC,EAA9D,EAAkE;EACrE;EACA,IAAI,EAAED,gBAAgB,YAAYE,MAA9B,CAAJ,EAA2C;IACvC,OAAOH,oBAAP;EACH;;EACD,MAAMI,GAAG,GAAG,EAAZ;EACAN,UAAU,CAACE,oBAAD,CAAV,CAAiCK,OAAjC,CAAyCC,QAAQ,IAAKF,GAAG,CAACE,QAAD,CAAH,GAAgBJ,EAAE,CAACF,oBAAoB,CAACM,QAAD,CAArB,EAAiCL,gBAAgB,CAACK,QAAD,CAAjD,CAAxE;EACAR,UAAU,CAACG,gBAAD,CAAV,CAA6BI,OAA7B,CAAqCC,QAAQ,IAAI;IAC7C,IAAIA,QAAQ,IAAIN,oBAAhB,EAAsC;MAClC;IACH;;IACD,MAAMO,SAAS,GAAGN,gBAAgB,CAACK,QAAD,CAAlC,CAJ6C,CAK7C;;IACA,IAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;MAC/B;IACH;;IACDH,GAAG,CAACE,QAAD,CAAH,GAAgBC,SAAhB;EACH,CAVD;EAWA,OAAOH,GAAP;AACH"},"metadata":{},"sourceType":"module"}