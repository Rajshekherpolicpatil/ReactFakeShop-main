{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * useEffect(\n *    ()=> { ... },\n *    [ { \"foo\": \"bar\" } ]\n * )\n * => The callback will be invoked every render.\n * because { \"foo\": \"bar\" } is a new instance every render.\n *\n * useEffect(\n *    ()=> { ... },\n *    [ getDependencyArrayRef({ \"foo\": \"bar\" }) ]\n * );\n * => The callback will only be invoked once.\n *\n * The optimization will be enabled only if obj is\n * of the form Record<string, string | number | undefined | null>\n * overwise the object is returned (the function is the identity function).\n */\nexport function getDependencyArrayRef(obj) {\n  if (!(obj instanceof Object) || typeof obj === \"function\") {\n    return obj;\n  }\n\n  const arr = [];\n\n  for (const key in obj) {\n    const value = obj[key];\n    const typeofValue = typeof value;\n\n    if (!(typeofValue === \"string\" || typeofValue === \"number\" && !isNaN(value) || typeofValue === \"boolean\" || value === undefined || value === null)) {\n      return obj;\n    }\n\n    arr.push(`${key}:${typeofValue}_${value}`);\n  }\n\n  return \"xSqLiJdLMd9s\" + arr.join(\"|\");\n}","map":{"version":3,"names":["getDependencyArrayRef","obj","Object","arr","key","value","typeofValue","isNaN","undefined","push","join"],"sources":["C:/Users/Polic/Downloads/ReactFakeShop-main/node_modules/tss-react/esm/tools/getDependencyArrayRef.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * useEffect(\n *    ()=> { ... },\n *    [ { \"foo\": \"bar\" } ]\n * )\n * => The callback will be invoked every render.\n * because { \"foo\": \"bar\" } is a new instance every render.\n *\n * useEffect(\n *    ()=> { ... },\n *    [ getDependencyArrayRef({ \"foo\": \"bar\" }) ]\n * );\n * => The callback will only be invoked once.\n *\n * The optimization will be enabled only if obj is\n * of the form Record<string, string | number | undefined | null>\n * overwise the object is returned (the function is the identity function).\n */\nexport function getDependencyArrayRef(obj) {\n    if (!(obj instanceof Object) || typeof obj === \"function\") {\n        return obj;\n    }\n    const arr = [];\n    for (const key in obj) {\n        const value = obj[key];\n        const typeofValue = typeof value;\n        if (!(typeofValue === \"string\" ||\n            (typeofValue === \"number\" && !isNaN(value)) ||\n            typeofValue === \"boolean\" ||\n            value === undefined ||\n            value === null)) {\n            return obj;\n        }\n        arr.push(`${key}:${typeofValue}_${value}`);\n    }\n    return \"xSqLiJdLMd9s\" + arr.join(\"|\");\n}\n"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,GAA/B,EAAoC;EACvC,IAAI,EAAEA,GAAG,YAAYC,MAAjB,KAA4B,OAAOD,GAAP,KAAe,UAA/C,EAA2D;IACvD,OAAOA,GAAP;EACH;;EACD,MAAME,GAAG,GAAG,EAAZ;;EACA,KAAK,MAAMC,GAAX,IAAkBH,GAAlB,EAAuB;IACnB,MAAMI,KAAK,GAAGJ,GAAG,CAACG,GAAD,CAAjB;IACA,MAAME,WAAW,GAAG,OAAOD,KAA3B;;IACA,IAAI,EAAEC,WAAW,KAAK,QAAhB,IACDA,WAAW,KAAK,QAAhB,IAA4B,CAACC,KAAK,CAACF,KAAD,CADjC,IAEFC,WAAW,KAAK,SAFd,IAGFD,KAAK,KAAKG,SAHR,IAIFH,KAAK,KAAK,IAJV,CAAJ,EAIqB;MACjB,OAAOJ,GAAP;IACH;;IACDE,GAAG,CAACM,IAAJ,CAAU,GAAEL,GAAI,IAAGE,WAAY,IAAGD,KAAM,EAAxC;EACH;;EACD,OAAO,iBAAiBF,GAAG,CAACO,IAAJ,CAAS,GAAT,CAAxB;AACH"},"metadata":{},"sourceType":"module"}